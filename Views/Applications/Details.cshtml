<!DOCTYPE html>
<html lang="en">
@model URC.Models.Application

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Microsoft.AspNetCore.Identity
@using URC.Areas.Identity.Data
@inject SignInManager<URCUser> SignInManager
@inject UserManager<URCUser> UserManager

<head>
    <title>DataTables </title>
    <meta name="author" content="Hunter Moffat" />
    <meta name="description" content="a page displaying the details of a application" />
    <meta name="charset" content="utf-8" />
    <meta name="keywords" content="application, details" />
    <script src="~/js/students.js"></script>
</head>
<h1>Application for @Model.Opportunity.Name</h1>
<body>
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.UID)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UID)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Email)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Email)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Skills)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Skills)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Interests)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Interests)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DegreePlan)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DegreePlan)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.GPA)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.GPA)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CompletedCourses)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CompletedCourses)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.GraduationDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.GraduationDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Resume)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Resume)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Statement)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Statement)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Applying)
            </dt>
            <dd class="col-sm-10">
                @if (User.IsInRole("Student"))
                {
                    string name = UserManager.GetUserName(User);
                    URCUser cur_user = await UserManager.FindByNameAsync(name);
                    if (cur_user.Email == Model.Email)
                    {
                        if (Model.Applying)
                        {
                            <div class="custom-control custom-switch">
                                <input type="checkbox" class="custom-control-input" id="active" checked onclick="apply('@Model.Email', 'active')">
                                <label class="custom-control-label" for="active"></label>
                            </div>
                        }
                        else
                        {
                            <div class="custom-control custom-switch">
                                <input type="checkbox" class="custom-control-input" id="active" onclick="updateRole('!@Model.Email', 'active')">
                                <label class="custom-control-label" for="active"></label>
                            </div>
                        }
                    }

                }
                else
                {
                    @Html.DisplayFor(model => model.Applying)
                }

            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DateCreated)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateCreated)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TimeModified)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TimeModified)
            </dd>
            <dt class="col-sm-2">
                Positions Available:
            </dt>
            <dd class="col-sm-10">
               @Model.Opportunity.Num_Slots
            </dd>
        </dl>
    </div>
    <div>
        @if (User.IsInRole("Student"))
        {
            string name = UserManager.GetUserName(User);
            URCUser cur_user = await UserManager.FindByNameAsync(name);
            if (cur_user.Email == Model.Email)
            {
                <a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-primary">Edit</a>
            }

        }
    </div>
    <div>
        @if (User.IsInRole("Professor"))
        {
            <a class="btn btn-secondary btn-sm" style="color:white;" onclick="acceptApplicant('@Model.OpportunityID', '@Model.ID')">Accept Applicant</a>
        }
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</body>
</html>